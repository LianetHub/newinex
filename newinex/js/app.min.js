/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n//  Fancybox\r\nif (typeof Fancybox !== \"undefined\" && Fancybox !== null) {\r\n    Fancybox.bind(\"[data-fancybox]\", {\r\n        dragToClose: false\r\n    });\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n\r\n    document.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n\r\n        if (target.closest('.icon-menu') || target.classList.contains('header__menu')) {\r\n            document.querySelector('.header').classList.toggle('open-menu');\r\n        }\r\n\r\n\r\n        if (target.classList.contains('menu__arrow')) {\r\n            const subMenu = target.nextElementSibling;\r\n\r\n            if (subMenu.classList.contains('open')) {\r\n                subMenu.classList.remove('open');\r\n                target.classList.remove('active');\r\n            } else {\r\n                closeAllMenus();\r\n                subMenu.classList.add('open');\r\n                target.classList.add('active');\r\n            }\r\n        }\r\n\r\n\r\n    });\r\n\r\n    function closeAllMenus() {\r\n        document.querySelectorAll('.submenu.open').forEach(menu => {\r\n            menu.classList.remove('open');\r\n            const button = menu.previousElementSibling;\r\n            if (button && button.classList.contains('menu__arrow')) {\r\n                button.classList.remove('active');\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n});\n\n//# sourceURL=webpack://tlm-gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;